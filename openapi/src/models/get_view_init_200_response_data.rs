/*
 * Terminal API
 *
 * The Terminal API gives you access to the same API that powers the award winning Terminal SSH shop (`ssh terminal.shop`).
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// GetViewInit200ResponseData : Initial app data.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetViewInit200ResponseData {
    #[serde(rename = "profile")]
    pub profile: Box<models::Profile>,
    #[serde(rename = "products")]
    pub products: Vec<models::Product>,
    #[serde(rename = "cart")]
    pub cart: Box<models::Cart>,
    #[serde(rename = "addresses")]
    pub addresses: Vec<models::Address>,
    #[serde(rename = "cards")]
    pub cards: Vec<models::Card>,
    #[serde(rename = "subscriptions")]
    pub subscriptions: Vec<models::Subscription>,
    #[serde(rename = "orders")]
    pub orders: Vec<models::Order>,
    #[serde(rename = "tokens")]
    pub tokens: Vec<models::Token>,
    #[serde(rename = "apps")]
    pub apps: Vec<models::App>,
    #[serde(rename = "region")]
    pub region: models::Region,
}

impl GetViewInit200ResponseData {
    /// Initial app data.
    pub fn new(profile: models::Profile, products: Vec<models::Product>, cart: models::Cart, addresses: Vec<models::Address>, cards: Vec<models::Card>, subscriptions: Vec<models::Subscription>, orders: Vec<models::Order>, tokens: Vec<models::Token>, apps: Vec<models::App>, region: models::Region) -> GetViewInit200ResponseData {
        GetViewInit200ResponseData {
            profile: Box::new(profile),
            products,
            cart: Box::new(cart),
            addresses,
            cards,
            subscriptions,
            orders,
            tokens,
            apps,
            region,
        }
    }
}

