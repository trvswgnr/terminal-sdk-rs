/*
 * Terminal API
 *
 * The Terminal API gives you access to the same API that powers the award winning Terminal SSH shop (`ssh terminal.shop`).
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// User : A Terminal shop user. (We have users, btw.)
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct User {
    /// Unique object identifier. The format and length of IDs may change over time.
    #[serde(rename = "id")]
    pub id: String,
    /// Name of the user.
    #[serde(rename = "name", deserialize_with = "Option::deserialize")]
    pub name: Option<String>,
    /// Email address of the user.
    #[serde(rename = "email", deserialize_with = "Option::deserialize")]
    pub email: Option<String>,
    /// The user's fingerprint, derived from their public SSH key.
    #[serde(rename = "fingerprint", deserialize_with = "Option::deserialize")]
    pub fingerprint: Option<String>,
    /// Stripe customer ID of the user.
    #[serde(rename = "stripeCustomerID")]
    pub stripe_customer_id: String,
}

impl User {
    /// A Terminal shop user. (We have users, btw.)
    pub fn new(id: String, name: Option<String>, email: Option<String>, fingerprint: Option<String>, stripe_customer_id: String) -> User {
        User {
            id,
            name,
            email,
            fingerprint,
            stripe_customer_id,
        }
    }
}

