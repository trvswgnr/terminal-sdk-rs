/*
 * Terminal API
 *
 * The Terminal API gives you access to the same API that powers the award winning Terminal SSH shop (`ssh terminal.shop`).
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ErrorResponse {
    /// The error type category
    #[serde(rename = "type")]
    pub r#type: Type,
    /// Machine-readable error code identifier
    #[serde(rename = "code")]
    pub code: String,
    /// Human-readable error message
    #[serde(rename = "message")]
    pub message: String,
    /// The parameter that caused the error (if applicable)
    #[serde(rename = "param", skip_serializing_if = "Option::is_none")]
    pub param: Option<String>,
    #[serde(rename = "details", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub details: Option<Option<serde_json::Value>>,
}

impl ErrorResponse {
    pub fn new(r#type: Type, code: String, message: String) -> ErrorResponse {
        ErrorResponse {
            r#type,
            code,
            message,
            param: None,
            details: None,
        }
    }
}
/// The error type category
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "validation")]
    Validation,
    #[serde(rename = "authentication")]
    Authentication,
    #[serde(rename = "forbidden")]
    Forbidden,
    #[serde(rename = "not_found")]
    NotFound,
    #[serde(rename = "rate_limit")]
    RateLimit,
    #[serde(rename = "internal")]
    Internal,
}

impl Default for Type {
    fn default() -> Type {
        Self::Validation
    }
}

