/*
 * Terminal API
 *
 * The Terminal API gives you access to the same API that powers the award winning Terminal SSH shop (`ssh terminal.shop`).
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Cart : The current Terminal shop user's cart.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Cart {
    /// An array of items in the current user's cart.
    #[serde(rename = "items")]
    pub items: Vec<models::CartItem>,
    /// The subtotal of all items in the current user's cart, in cents (USD).
    #[serde(rename = "subtotal")]
    pub subtotal: i32,
    /// ID of the shipping address selected on the current user's cart.
    #[serde(rename = "addressID", skip_serializing_if = "Option::is_none")]
    pub address_id: Option<String>,
    /// ID of the card selected on the current user's cart.
    #[serde(rename = "cardID", skip_serializing_if = "Option::is_none")]
    pub card_id: Option<String>,
    #[serde(rename = "amount")]
    pub amount: Box<models::CartAmount>,
    #[serde(rename = "shipping", skip_serializing_if = "Option::is_none")]
    pub shipping: Option<Box<models::CartShipping>>,
}

impl Cart {
    /// The current Terminal shop user's cart.
    pub fn new(items: Vec<models::CartItem>, subtotal: i32, amount: models::CartAmount) -> Cart {
        Cart {
            items,
            subtotal,
            address_id: None,
            card_id: None,
            amount: Box::new(amount),
            shipping: None,
        }
    }
}

